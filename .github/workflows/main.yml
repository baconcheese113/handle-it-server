# Name of your workflow.
name: main

# Trigger the workflow manually or after push a commit
on: [push, workflow_dispatch]

env:
  NODE_VERSION: 18.12.1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: ikalnytskyi/action-setup-postgres@v4
        with:
          username: postgres
          password: postgres
          database: test
          port: 5432

      - uses: actions/checkout@v3.3.0

      - name: Setup Nodejs
        uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Build and install
        run: |
          touch .env.testing
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test?schema=public" >> .env.testing
          echo "JWT_SECRET=test_secret" >> .env.testing
          npm install
          npm run build
          npx graphql-codegen

      - name: Push Schema and Seed DB
        run: |
          npm run push-db:test
          npm run seed:test

      - name: Run tests
        run: |
          npm run test

  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          workload_identity_provider: "projects/847955048569/locations/global/workloadIdentityPools/my-pool/providers/my-provider"
          service_account: "my-service-account@handleit-349522.iam.gserviceaccount.com"
          token_format: "access_token"

      - id: "deploy"
        uses: "google-github-actions/deploy-cloudrun@v0"
        with:
          service: "handle-it-server"
          image: "gcr.io/handleit-349522/handle-it-server:latest"

      - name: "Use output"
        run: 'curl "${{ steps.deploy.outputs.url }}"'
